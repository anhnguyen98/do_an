<div class="col-sm-9 sidenav no-padding">
    <div class="right" data-chat="">
        {{{viewMessage user getAllMessage statusMessage infoUserReceiver}}}
        <div class="write" data-chat="">
            <input type="text" class="write-chat" id="input-chat" placeholder="Nhập nội dung...">
            <div class="icons">
                <a href="#" class="icon-chat" data-chat=""><i class="fa fa-smile-o"></i></a>
                <label for="attach-chat">
                    <input type="file" id="attach-chat" name="my-attach-chat" class="attach-chat" data-chat="">
                    <i class="fa fa-paperclip"></i>
                </label>
                <input type="hidden" id="peer-id" value="">
            </div>
        </div>
    </div>
</div>

<script>
    let enterMsg = document.querySelector('#input-chat');
    let bodyMsg = document.querySelector("#chat-element")
     const botChat = {
        question: function() {
            const _this = this;
            enterMsg.addEventListener ("keyup", function(event) {
                if (event.keyCode === 13) {
                    let idReceiver = $(".top[data-id]").attr("data-id");
                    socket.emit("send-message", {text: enterMsg.value, idReceiver})
                    event.preventDefault();
                    _this.addElement()

                    enterMsg.value = ""; 
                     bodyMsg.scrollTo(0,10000000000000);
                        setTimeout(()=>{
                            bodyMsg.scrollTo(0,10000000000000);
                        }, 1000)
                }
            })
        },
        addElement: function () {
                const main = document.querySelector('#chat-element');
                if (main) {
                    const newMsg = document.createElement('div');
                        newMsg.classList.add('bubble');
                        newMsg.classList.add('you');
                        newMsg.innerHTML = `
                            <span> ${enterMsg.value} </span>
                    
                        `;
                    main.appendChild(newMsg);
                }
            },
        addElementMe: function (data) {
                const main = document.querySelector('#chat-element');
                if (main) {
                    const newMsg = document.createElement('div');
                        newMsg.classList.add('bubble');
                        newMsg.classList.add('me');
                        newMsg.innerHTML = `
                            <span> ${data.text}</span>
                    
                        `;
                    main.appendChild(newMsg);
                }
            },
        start: function () {
            this.question()
        }
     };
      botChat.start();
      $(document).ready(function(){
            function nineScrollRight() {
                $('.right .chat').niceScroll({
                smoothscroll: true,
                horizrailenabled: false,
                cursorcolor: '#ECECEC',
                cursorwidth: '7px',
                scrollspeed: 50
                });
                $('.right .chat').scrollTop($('.right .chat')[0].scrollHeight);
            }
            nineScrollRight();
            socket.on("response-send-chat", function(data){
                  const main = document.querySelector('#chat-element');
                if (main) {
                    const newMsg = document.createElement('div');
                        newMsg.classList.add('bubble');
                        newMsg.classList.add('me');
                        newMsg.innerHTML = `
                            <span> ${data.text}</span>
                    
                        `;
                    main.appendChild(newMsg);
                     bodyMsg.scrollTo(0,10000000000000);
                        setTimeout(()=>{
                            bodyMsg.scrollTo(0,10000000000000);
                        }, 1000)
                }
            })

      });
</script>